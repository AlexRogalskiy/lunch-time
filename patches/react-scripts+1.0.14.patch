diff --git a/node_modules/react-scripts/config/webpack.config.dev.js b/node_modules/react-scripts/config/webpack.config.dev.js
index 44669e6..6e20633 100644
--- a/node_modules/react-scripts/config/webpack.config.dev.js
+++ b/node_modules/react-scripts/config/webpack.config.dev.js
@@ -92,7 +92,7 @@ module.exports = {
     // https://github.com/facebookincubator/create-react-app/issues/290
     // `web` extension prefixes have been added for better support
     // for React Native Web.
-    extensions: ['.web.js', '.js', '.json', '.web.jsx', '.jsx'],
+    extensions: ['.web.js', '.js', '.json', '.web.jsx', '.jsx', '.ts', '.tsx'],
     alias: {
       // @remove-on-eject-begin
       // Resolve Babel runtime relative to react-scripts.
@@ -162,6 +162,16 @@ module.exports = {
               name: 'static/media/[name].[hash:8].[ext]',
             },
           },
+          // Process typescript
+          {
+            test: /\.tsx?/,
+            loader: require.resolve('ts-loader'),
+            options: {
+              compilerOptions: {
+                noEmit: false
+              }
+            }
+          },
           // Process JS with Babel.
           {
             test: /\.(js|jsx)$/,
diff --git a/node_modules/react-scripts/config/webpack.config.prod.js b/node_modules/react-scripts/config/webpack.config.prod.js
index ef4ea1b..198e7d0 100644
--- a/node_modules/react-scripts/config/webpack.config.prod.js
+++ b/node_modules/react-scripts/config/webpack.config.prod.js
@@ -96,7 +96,7 @@ module.exports = {
     // https://github.com/facebookincubator/create-react-app/issues/290
     // `web` extension prefixes have been added for better support
     // for React Native Web.
-    extensions: ['.web.js', '.js', '.json', '.web.jsx', '.jsx'],
+    extensions: ['.web.js', '.js', '.json', '.web.jsx', '.jsx', '.ts', '.tsx'],
     alias: {
       // @remove-on-eject-begin
       // Resolve Babel runtime relative to react-scripts.
@@ -167,6 +167,16 @@ module.exports = {
               name: 'static/media/[name].[hash:8].[ext]',
             },
           },
+          // Process typescript
+          {
+            test: /\.tsx?/,
+            loader: require.resolve('ts-loader'),
+            options: {
+              compilerOptions: {
+                noEmit: false
+              }
+            }
+          },
           // Process JS with Babel.
           {
             test: /\.(js|jsx)$/,
